From fe675f579c624b8639741339676713bea14dfc8d Mon Sep 17 00:00:00 2001
From: PermisosDev <55111245+PermisosDev@users.noreply.github.com>
Date: Thu, 15 Apr 2021 14:11:24 -0300
Subject: [PATCH] Add skip bytes on PACKET_NOT_READ_TO_END and changed 255 to
 MAX_PACKET_ID


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
index b3de7a7b..9b7934b8 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
@@ -66,7 +66,7 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
             int packetId = DefinedPacket.readVarInt( in );
             packetTypeInfo = packetId;
             // FlameCord Start - Check if packetId is invalid.
-            if (packetId < 0 || packetId > 255)
+            if (packetId < 0 || packetId > Protocol.MAX_PACKET_ID)
                 throw new BadPacketException("[" + ctx.channel().remoteAddress() + "] <-> MinecraftDecoder received invalid packet #1, id " + packetId);
             // Flamecord End
             DefinedPacket packet = prot.createPacket( packetId, protocolVersion, supportsForge );
@@ -83,6 +83,7 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
                         throw PACKET_NOT_READ_TO_END;
                     }
                     // Waterfall end
+                    in.skipBytes(in.readableBytes()); // Flamecord - Skip bytes.
                     throw new BadPacketException( "Did not read all bytes from packet " + packet.getClass() + " " + packetId + " Protocol " + protocol + " Direction " + prot.getDirection() );
                 }
             } else
-- 
2.29.2.windows.3

